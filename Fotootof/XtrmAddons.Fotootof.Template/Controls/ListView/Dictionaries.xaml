<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:system="clr-namespace:System;assembly=mscorlib">

	<!-- Generic List View Item Style -->
	<Style x:Key="ListViewCollection" TargetType="{x:Type ListView}">
		<Setter Property="Background" Value="{DynamicResource ListLowBrush}" />
	</Style>
	
	
	<!-- Generic List View Item Style -->
	<Style x:Key="ListViewItemDefault" TargetType="{x:Type ListViewItem}">

		<Style.Resources>
			<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
			<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
			<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
			<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
			<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#FFFF5454"/>
			<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#000000"/>
		</Style.Resources>

		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					
					<Grid Margin="1">
						<Border x:Name="OuterPicture"
								Padding="2"
								Background="LightBlue">
							<Border x:Name="InnerPicture"
									Background="White"
									Padding="3">
								<ContentPresenter />
							</Border>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True"/>
							</MultiTrigger.Conditions>
							
							<Setter Property="Background" TargetName="InnerPicture" Value="{StaticResource Item.MouseOver.Background}"/>
							<Setter Property="Background" TargetName="OuterPicture" Value="{StaticResource Item.MouseOver.Border}"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="InnerPicture" Value="{StaticResource Item.SelectedInactive.Background}"/>
							<Setter Property="Background" TargetName="OuterPicture" Value="{StaticResource Item.SelectedInactive.Border}"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="InnerPicture" Value="{StaticResource Item.SelectedActive.Background}"/>
							<Setter Property="Background" TargetName="OuterPicture" Value="{StaticResource Item.SelectedActive.Border}"/>
						</MultiTrigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="InnerPicture" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<!-- Custom triggers -->
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True" >
				<Setter Property="FontWeight" Value="Bold" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
</ResourceDictionary>