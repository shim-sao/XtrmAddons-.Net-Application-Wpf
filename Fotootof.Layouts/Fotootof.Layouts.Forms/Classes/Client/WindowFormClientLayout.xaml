<base:WindowLayoutForm
	x:Name="UCWindowClientForm"
    x:Class="Fotootof.Layouts.Forms.Client.WindowFormClientLayout"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:t="clr-namespace:Fotootof.Layouts.Forms.Properties"
    xmlns:l="clr-namespace:Fotootof.Local.Properties;assembly=Fotootof.Local"
    xmlns:base="clr-namespace:Fotootof.Libraries.Windows;assembly=Fotootof.Libraries.Windows"
    xmlns:rrString="clr-namespace:XtrmAddons.Net.Windows.ValidationRules;assembly=XtrmAddons.Net.Windows"
    mc:Ignorable="d"
    Width="480"
    Height="480"
	Closing="Window_Closing"
    FocusManager.FocusedElement="{Binding ElementName=InputName}"
	Loaded="Window_Load"
    ResizeMode="NoResize"
	Style="{DynamicResource WindowFormStyle}"
    Title="{x:Static t:Translations.WindowFormClientLayoutTitle}"
    WindowStartupLocation="CenterScreen">

    <Grid x:Name="GridBlockRootName" Style="{StaticResource FrameworkElementRootStyle}">

        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <TabControl x:Name="TabControlFormContentName">

            <!-- #region : Tabs Informations -->
            <TabItem Header="{x:Static l:Translations.Informations}">


                <StackPanel Style="{StaticResource StackPanelFormStyle}">

                    <!-- #region : Field Name -->
                    <StackPanel Style="{StaticResource StackPanelFieldStyle}">

                        <Label Content="{x:Static l:Translations.Name}"
                                   Style="{StaticResource LabelInputStyle}"/>

                        <TextBox x:Name="InputName"
									 Style="{StaticResource TextBoxFieldInputRequiredStyle}"
									 Validation.ErrorTemplate="{StaticResource ControlTemplateFormFieldValidation}"
									 Validation.Error="OnInput_ValidationError"
									 SourceUpdated="OnInputStringRequired_SourceUpdated"
									 TargetUpdated="OnInput_TargetUpdated"
									 TextChanged="OnInputStringRequired_TextChanged">

                            <TextBox.Text>
                                <Binding Path="Client.Name"
										Mode="TwoWay"
										UpdateSourceTrigger="LostFocus"
										IsAsync="True"
										ValidatesOnDataErrors="True"
										ValidatesOnExceptions="True"
										NotifyOnValidationError="True"
										NotifyOnSourceUpdated="True"
										NotifyOnTargetUpdated="True">

                                    <Binding.ValidationRules>
                                        <rrString:StringRequired />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                    </StackPanel>
                    <!-- #endregion : Field Name -->


                    <!-- #region : Field Host -->
                    <StackPanel Orientation="Horizontal"
									Style="{StaticResource StackPanelFieldStyle}">

                        <Label Content="{x:Static l:Translations.Host}"
                                   Style="{StaticResource LabelInputStyle}"/>

                        <TextBox x:Name="InputHost"
								Style="{StaticResource TextBoxFieldInputRequiredStyle}"
								Validation.ErrorTemplate="{StaticResource ControlTemplateFormFieldValidation}"
								Validation.Error="OnInput_ValidationError"
								SourceUpdated="OnInputHost_SourceChanged"
								TargetUpdated="OnInput_TargetUpdated"
								TextChanged="OnInputStringRequired_TextChanged">

                            <TextBox.Text>
                                <Binding Path="Client.Host"
										Mode="TwoWay"
										UpdateSourceTrigger="LostFocus"
										IsAsync="True"
										ValidatesOnDataErrors="True"
										ValidatesOnExceptions="True"
										NotifyOnValidationError="True"
										NotifyOnSourceUpdated="True"
										NotifyOnTargetUpdated="True">

                                    <Binding.ValidationRules>
                                        <rrString:StringRequired />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                    </StackPanel>
                    <!-- #endregion : Field Host -->


                    <!-- #region : Field Port -->
                    <StackPanel Style="{StaticResource StackPanelFieldStyle}">

                        <Label Content="{x:Static l:Translations.Port}"
                                   Style="{StaticResource LabelInputStyle}"/>

                        <TextBox x:Name="InputPort"
									 Style="{StaticResource TextBoxFieldInputRequiredStyle}"
									 Validation.ErrorTemplate="{StaticResource ControlTemplateFormFieldValidation}"
									 Validation.Error="OnInput_ValidationError"
									 SourceUpdated="OnInputStringRequired_SourceUpdated"
									 TargetUpdated="OnInput_TargetUpdated"
									 TextChanged="OnInputStringRequired_TextChanged">

                            <TextBox.Text>
                                <Binding Path="Client.Port"
											 Mode="TwoWay"
											 UpdateSourceTrigger="LostFocus"
											 IsAsync="True"
											 ValidatesOnDataErrors="True"
											 ValidatesOnExceptions="True"
											 NotifyOnValidationError="True"
											 NotifyOnSourceUpdated="True"
											 NotifyOnTargetUpdated="True">

                                    <Binding.ValidationRules>
                                        <rrString:StringRequired />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                    </StackPanel>
                    <!-- #endregion : Field Port -->


                    <!-- #region : Field UserName -->
                    <StackPanel Style="{StaticResource StackPanelFieldStyle}">

                        <Label Content="{x:Static l:Translations.User}" Style="{StaticResource LabelInputStyle}"/>

                        <TextBox x:Name="InputUserName"
                                 Style="{StaticResource TextBoxFieldInputStyle}"
                                 Text="{Binding Path=Client.UserName, Mode=TwoWay, IsAsync=True}"
                                 Tag="UserName"/>

                    </StackPanel>
                    <!-- #endregion : Field UserName -->


                    <!-- #region : Field Email -->
                    <StackPanel Style="{StaticResource StackPanelFieldStyle}">

                        <Label Content="{x:Static l:Translations.Email}" Style="{StaticResource LabelInputStyle}"/>

                        <TextBox x:Name="InputEmail"
                                 Style="{StaticResource TextBoxFieldInputStyle}"
                                 Text="{Binding Path=Client.Email, Mode=TwoWay, IsAsync=True}"
                                 Tag="Email"/>

                    </StackPanel>
                    <!-- #endregion : Field Email -->



                    <!-- #region : Field Password -->
                    <StackPanel Style="{StaticResource StackPanelFieldStyle}">

                        <Label Style="{StaticResource LabelInputStyle}" Content="{x:Static l:Translations.Password}"/>

                        <!--<TextBox x:Name="InputPassword"
									 Style="{StaticResource TextBoxFieldInputRequiredStyle}"
									 Validation.ErrorTemplate="{StaticResource ControlTemplateFormFieldValidation}"
									 Validation.Error="OnInput_ValidationError"
									 SourceUpdated="OnInputStringRequired_SourceUpdated"
									 TargetUpdated="OnInput_TargetUpdated"
									 TextChanged="OnInputStringRequired_TextChanged"
									 Width="310">

								<TextBox.Text>
									<Binding Path="Client.Password"
											 Mode="TwoWay"
											 UpdateSourceTrigger="LostFocus"
											 IsAsync="True"
											 ValidatesOnDataErrors="True"
											 ValidatesOnExceptions="True"
											 NotifyOnValidationError="True"
											 NotifyOnSourceUpdated="True"
											 NotifyOnTargetUpdated="True">

										<Binding.ValidationRules>
											<rrString:StringRequired />
										</Binding.ValidationRules>
									</Binding>
								</TextBox.Text>
							</TextBox>-->

                        <PasswordBox x:Name="InputPassword"
									Style="{StaticResource PasswordBoxFieldInputRequired}"
									Validation.ErrorTemplate="{StaticResource ControlTemplateFormFieldValidation}"
									PasswordChanged="OnInputPassword_PasswordChanged"
									Validation.Error="OnInput_ValidationError"
									MaxLength="64">

                        </PasswordBox>
                    </StackPanel>
                    <!-- #endregion : Field Password -->


                    <!-- #region : Field Comment -->
                    <StackPanel Style="{StaticResource StackPanelFieldStyle}">

                        <Label Style="{StaticResource LabelInputStyle}"
                                   Content="{x:Static l:Translations.Comment}"/>

                        <TextBox x:Name="InputComment"
									 Style="{StaticResource TextBoxFieldInputAreaStyle}"
									 Text="{Binding Path=Client.Comment, Mode=TwoWay, IsAsync=True}"
									 Height="90"
									 Tag="Comment"/>
                    </StackPanel>
                    <!-- #endregion : Field Comment -->

                </StackPanel>

            </TabItem>
            <!-- #endregion : Tabs Informations -->

        </TabControl>


        
        <!-- #region BLOCK FORM VALIDATOR -->
		<Grid Grid.Row="1" Grid.RowSpan="2" Style="{StaticResource GridFormValidatorStyle}">
			<StackPanel Style="{StaticResource StackPanelFormValidatorStyle}">
                <Button x:Name="ButtonSaveName"
						Click="DialogSave_Click"
						Content="{x:Static l:Translations.Save}"
						IsEnabled="{Binding IsSaveEnabled, UpdateSourceTrigger=Explicit, Mode=TwoWay, IsAsync=True}"
						Style="{StaticResource ButtonSaveStyle}"/>

				<Button x:Name="ButtonCancelName"
						Content="{x:Static l:Translations.Cancel}"
						Style="{StaticResource ButtonCancelStyle}"/>

			</StackPanel>
		</Grid>
		<!-- #endregion -->

    </Grid>
</base:WindowLayoutForm>
